{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nlet initialCart = JSON.parse(localStorage.getItem('cart')) || [];\nlet cartSlice = createSlice({\n  name: 'cartIcon',\n  initialState: initialCart,\n  reducers: {\n    ADDCART: (state, action) => {\n      let item = action.payload;\n      let existingItem = state.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.push({\n          ...item,\n          quantity: 1\n        });\n      }\n      localStorage.setItem('cartIcon', JSON.stringify(state));\n    },\n    REMOVEFROMCART: (state, action) => {\n      let id = action.payload;\n      let updatedCart = state.filter(cartItem => cartItem.id !== id);\n      localStorage.setItem('cartIcon', JSON.stringify(updatedCart));\n      return updatedCart;\n    },\n    IncQuantity: (state, action) => {\n      let id = action.payload;\n      let item = state.find(cartItem => cartItem.id === id);\n      if (item) item.quantity += 1;\n      localStorage.setItem('cartIcon', JSON.stringify(state));\n    },\n    DecQuantity: (state, action) => {\n      let id = action.payload;\n      let item = state.find(cartItem => cartItem.id == id);\n      if (item && item.quantity > 1) {\n        item.quantity -= 1;\n      }\n      localStorage.setItem('cart', JSON.stringify(state));\n    }\n  }\n});\nexport const {\n  ADDCART,\n  REMOVEFROMCART,\n  IncQuantity,\n  DecQuantity\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialCart","JSON","parse","localStorage","getItem","cartSlice","name","initialState","reducers","ADDCART","state","action","item","payload","existingItem","find","cartItem","id","quantity","push","setItem","stringify","REMOVEFROMCART","updatedCart","filter","IncQuantity","DecQuantity","actions","reducer"],"sources":["C:/Users/Lenovo/Desktop/ReactProject/project/src/redux/cartIcon.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nlet initialCart = JSON.parse(localStorage.getItem('cart')) || []\r\n\r\nlet cartSlice = createSlice(\r\n    {\r\n        name:'cartIcon',\r\n        initialState : initialCart,\r\n        reducers : {\r\n            ADDCART :(state,action)=>{\r\n                let item = action.payload\r\n                let existingItem = state.find(cartItem => cartItem.id === item.id)\r\n                if(existingItem){\r\n                    existingItem.quantity +=1\r\n                }else{\r\n                    state.push({...item, quantity: 1} )\r\n                }\r\n                localStorage.setItem('cartIcon',JSON.stringify(state))\r\n            },\r\n            REMOVEFROMCART :(state,action)=>{\r\n                let id = action.payload\r\n                let updatedCart = state.filter(cartItem=> cartItem.id !== id)\r\n                localStorage.setItem('cartIcon',JSON.stringify(updatedCart))\r\n                return  updatedCart\r\n            },\r\n            IncQuantity : (state,action)=>{\r\n                let id = action.payload\r\n                let item = state.find(cartItem => cartItem.id === id)\r\n                if(item)item.quantity +=1 \r\n                localStorage.setItem('cartIcon',JSON.stringify(state))\r\n            },\r\n            DecQuantity : (state,action)=>{\r\n                let id = action.payload\r\n                let item = state.find(cartItem => cartItem.id == id)\r\n                if(item && item.quantity > 1){\r\n                    item.quantity-=1\r\n                }\r\n                localStorage.setItem('cart',JSON.stringify(state))\r\n            }\r\n        }\r\n    }\r\n)\r\nexport const {ADDCART,REMOVEFROMCART,IncQuantity,DecQuantity} = cartSlice.actions\r\nexport default cartSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;AAEhE,IAAIC,SAAS,GAAGN,WAAW,CACvB;EACIO,IAAI,EAAC,UAAU;EACfC,YAAY,EAAGP,WAAW;EAC1BQ,QAAQ,EAAG;IACPC,OAAO,EAAEA,CAACC,KAAK,EAACC,MAAM,KAAG;MACrB,IAAIC,IAAI,GAAGD,MAAM,CAACE,OAAO;MACzB,IAAIC,YAAY,GAAGJ,KAAK,CAACK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;MAClE,IAAGH,YAAY,EAAC;QACZA,YAAY,CAACI,QAAQ,IAAG,CAAC;MAC7B,CAAC,MAAI;QACDR,KAAK,CAACS,IAAI,CAAC;UAAC,GAAGP,IAAI;UAAEM,QAAQ,EAAE;QAAC,CAAE,CAAC;MACvC;MACAf,YAAY,CAACiB,OAAO,CAAC,UAAU,EAACnB,IAAI,CAACoB,SAAS,CAACX,KAAK,CAAC,CAAC;IAC1D,CAAC;IACDY,cAAc,EAAEA,CAACZ,KAAK,EAACC,MAAM,KAAG;MAC5B,IAAIM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACvB,IAAIU,WAAW,GAAGb,KAAK,CAACc,MAAM,CAACR,QAAQ,IAAGA,QAAQ,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7Dd,YAAY,CAACiB,OAAO,CAAC,UAAU,EAACnB,IAAI,CAACoB,SAAS,CAACE,WAAW,CAAC,CAAC;MAC5D,OAAQA,WAAW;IACvB,CAAC;IACDE,WAAW,EAAGA,CAACf,KAAK,EAACC,MAAM,KAAG;MAC1B,IAAIM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACvB,IAAID,IAAI,GAAGF,KAAK,CAACK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKA,EAAE,CAAC;MACrD,IAAGL,IAAI,EAACA,IAAI,CAACM,QAAQ,IAAG,CAAC;MACzBf,YAAY,CAACiB,OAAO,CAAC,UAAU,EAACnB,IAAI,CAACoB,SAAS,CAACX,KAAK,CAAC,CAAC;IAC1D,CAAC;IACDgB,WAAW,EAAGA,CAAChB,KAAK,EAACC,MAAM,KAAG;MAC1B,IAAIM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACvB,IAAID,IAAI,GAAGF,KAAK,CAACK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,IAAIA,EAAE,CAAC;MACpD,IAAGL,IAAI,IAAIA,IAAI,CAACM,QAAQ,GAAG,CAAC,EAAC;QACzBN,IAAI,CAACM,QAAQ,IAAE,CAAC;MACpB;MACAf,YAAY,CAACiB,OAAO,CAAC,MAAM,EAACnB,IAAI,CAACoB,SAAS,CAACX,KAAK,CAAC,CAAC;IACtD;EACJ;AACJ,CACJ,CAAC;AACD,OAAO,MAAM;EAACD,OAAO;EAACa,cAAc;EAACG,WAAW;EAACC;AAAW,CAAC,GAAGrB,SAAS,CAACsB,OAAO;AACjF,eAAetB,SAAS,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}