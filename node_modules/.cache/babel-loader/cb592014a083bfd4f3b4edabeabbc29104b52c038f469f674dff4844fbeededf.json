{"ast":null,"code":"// import { createSlice } from '@reduxjs/toolkit';\n\n// const cartSlice = createSlice({\n//   name: 'cart',\n//   initialState: [],\n//   reducers: {\n//     addToCart: (state, action) => {\n//       const existingItem = state.find(item => item.id === action.payload.id);\n//       if (existingItem) {\n//         existingItem.quantity += 1;\n//       } else {\n//         state.push({ ...action.payload, quantity: 1 });\n//       }\n//     },\n//     removeFromCart: (state, action) => {\n//       return state.filter(item => item.id !== action.payload.id);\n//     },\n//     incrementQuantity: (state, action) => {\n//       const item = state.find(item => item.id === action.payload.id);\n//       if (item) {\n//         item.quantity += 1;\n//       }\n//     },\n//     decrementQuantity: (state, action) => {\n//       const item = state.find(item => item.id === action.payload.id);\n//       if (item && item.quantity > 1) {\n//         item.quantity -= 1;\n//       }\n//     },\n//   },\n// });\n\n// export const { addToCart, removeFromCart, incrementQuantity, decrementQuantity } = cartSlice.actions;\n\n// export default cartSlice.reducer;\n\nimport { createSlice } from '@reduxjs/toolkit';\n\n// Helper function to load cart from localStorage\nconst loadFromLocalStorage = () => {\n  try {\n    const savedCart = localStorage.getItem('cart');\n    return savedCart ? JSON.parse(savedCart) : [];\n  } catch (error) {\n    console.error('Failed to load cart from localStorage:', error);\n    return [];\n  }\n};\nconst initialCartState = {\n  items: loadFromLocalStorage(),\n  // Ensure this is an array\n  totalPrice: 0 // Ensure totalPrice is initialized as a number\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartState,\n  reducers: {\n    addToCart: (state, action) => {\n      // Use the state object properly here\n      const existingItem = state.items.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.items.push({\n          ...action.payload,\n          quantity: 1\n        });\n      }\n      state.totalPrice += action.payload.price;\n    },\n    removeFromCart: (state, action) => {\n      const item = state.items.find(item => item.id === action.payload.id);\n      if (item) {\n        state.totalPrice -= item.price * item.quantity;\n        state.items = state.items.filter(item => item.id !== action.payload.id);\n      }\n    },\n    incrementQuantity: (state, action) => {\n      const item = state.items.find(item => item.id === action.payload.id);\n      if (item) {\n        item.quantity += 1;\n        state.totalPrice += item.price;\n      }\n    },\n    decrementQuantity: (state, action) => {\n      const item = state.items.find(item => item.id === action.payload.id);\n      if (item && item.quantity > 1) {\n        item.quantity -= 1;\n        state.totalPrice -= item.price;\n      }\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  incrementQuantity,\n  decrementQuantity\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","loadFromLocalStorage","savedCart","localStorage","getItem","JSON","parse","error","console","initialCartState","items","totalPrice","cartSlice","name","initialState","reducers","addToCart","state","action","existingItem","find","item","id","payload","quantity","push","price","removeFromCart","filter","incrementQuantity","decrementQuantity","actions","reducer"],"sources":["C:/Users/Lenovo/Desktop/ReactProject/project/src/redux/cartSlice.jsx"],"sourcesContent":["// import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// const cartSlice = createSlice({\r\n//   name: 'cart',\r\n//   initialState: [],\r\n//   reducers: {\r\n//     addToCart: (state, action) => {\r\n//       const existingItem = state.find(item => item.id === action.payload.id);\r\n//       if (existingItem) {\r\n//         existingItem.quantity += 1;\r\n//       } else {\r\n//         state.push({ ...action.payload, quantity: 1 });\r\n//       }\r\n//     },\r\n//     removeFromCart: (state, action) => {\r\n//       return state.filter(item => item.id !== action.payload.id);\r\n//     },\r\n//     incrementQuantity: (state, action) => {\r\n//       const item = state.find(item => item.id === action.payload.id);\r\n//       if (item) {\r\n//         item.quantity += 1;\r\n//       }\r\n//     },\r\n//     decrementQuantity: (state, action) => {\r\n//       const item = state.find(item => item.id === action.payload.id);\r\n//       if (item && item.quantity > 1) {\r\n//         item.quantity -= 1;\r\n//       }\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export const { addToCart, removeFromCart, incrementQuantity, decrementQuantity } = cartSlice.actions;\r\n\r\n// export default cartSlice.reducer;\r\n\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\n// Helper function to load cart from localStorage\r\nconst loadFromLocalStorage = () => {\r\n  try {\r\n    const savedCart = localStorage.getItem('cart');\r\n    return savedCart ? JSON.parse(savedCart) : [];\r\n  } catch (error) {\r\n    console.error('Failed to load cart from localStorage:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst initialCartState = {\r\n  items: loadFromLocalStorage(),  // Ensure this is an array\r\n  totalPrice: 0, // Ensure totalPrice is initialized as a number\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: initialCartState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      // Use the state object properly here\r\n      const existingItem = state.items.find((item) => item.id === action.payload.id);\r\n      if (existingItem) {\r\n        existingItem.quantity += 1;\r\n      } else {\r\n        state.items.push({ ...action.payload, quantity: 1 });\r\n      }\r\n      state.totalPrice += action.payload.price;\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      const item = state.items.find((item) => item.id === action.payload.id);\r\n      if (item) {\r\n        state.totalPrice -= item.price * item.quantity;\r\n        state.items = state.items.filter((item) => item.id !== action.payload.id);\r\n      }\r\n    },\r\n    incrementQuantity: (state, action) => {\r\n      const item = state.items.find((item) => item.id === action.payload.id);\r\n      if (item) {\r\n        item.quantity += 1;\r\n        state.totalPrice += item.price;\r\n      }\r\n    },\r\n    decrementQuantity: (state, action) => {\r\n      const item = state.items.find((item) => item.id === action.payload.id);\r\n      if (item && item.quantity > 1) {\r\n        item.quantity -= 1;\r\n        state.totalPrice -= item.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, removeFromCart, incrementQuantity, decrementQuantity } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}